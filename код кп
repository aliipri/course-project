#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <stdlib.h>
#define _USE_MATH_DEFINES
#include <math.h>
#include <locale.h>
#include <conio.h>

int clrscr() //функция очистки экрана консоли
{
	system("@cls||clear");
	return 1;
}


void tabl() // функция печати таблиц
{
	int menu;
	do
	{
		printf("Туринирная таблица по настольному теннсису\n1) Исходная таблица\n2) Результирующая таблица\n0) Выход из программы\nВыберите нужный пункт: ");
		scanf("%d", &menu);
		switch (menu)
		{
		case 1:
			clrscr();
			printf(" № по порядку |   имя участника  |");
			//+-динамический вывод столбика с объявлением очков
			for (int x = 0; x < i; x++)
			{
				if (x == (i / 2))
				{
					printf("%14s", "№ по порядку");
				}
				else
					printf("%10s ", "");
			}
			printf("|");


			printf("\n              |                  |");
			for (int j = 1; j <= i; j++)
				printf("      %i    |", j);
			printf("\n              |                  |");
			for (int j = 1; j <= i; j++)
				printf("    Счет   |");
			printf("\n");


			for (int q = 0; q < i; q++)
			{
				printf("          %i   | %16s |", q + 1, name[q]);
				for (int x = 0; x < i; x++)
				{
					if (*(a + q * r + x) == -1)
					{
						printf("           |");
					}
					else
						printf("     %i:%i   |", *(a + q * r + x), *(b + q * r + x));
				}
				printf("\n");
			}
			printf("\n\n");
			break;


		case 2:
			clrscr();
			printf(" № по порядку |   имя участника  |");
			//+-динамический вывод столбика с объявлением очков
			for (int x = 0; x < i; x++)
			{
				if (x == (i / 2))
				{
					printf("%6s", "№ по порядку ");
				}
				else
					printf("%9s ", "");
			}
			printf("| Сумма очков | место |");

			printf("\n              |                  |");
			for (int j = 1; j <= i; j++)
				printf("    %i     |", j);
			printf("             |       |\n              |                  |");
			for (int j = 1; j <= i; j++)
				printf("   Очки   |");
			printf("             |       |\n");
			for (int q = 0; q < i; q++)
			{
				printf("       %i      | %16s |", q + 1, name[q]);
				for (int x = 0; x < i; x++)
				{
					if (*(a + q * r + x) == -1)
					{
						printf("          |");
					}
					else
						printf("     %1i    |", *(a + q * r + x) > *(b + q * r + x) ? 2 : 1);
				}
				printf("  %6i%5s|    %i  |\n", sum_ochkov[q], "", mesto[q]);
			}
			printf("\n\n");
			break;
		}
	} while (menu != 0);
}




int ochki() // функция вычисления суммы очков
{
	for (int q = 0; q < i; q++)
	{
		int sum = 0;
		for (int x = 0; x < i; x++)
		{
			if (*(a + q * r + x) == -1)
				continue;
			if (*(a + q * r + x) > *(b + q * r + x)) sum += 2;
			else sum += 1;
		}
		sum_ochkov[q] = sum;

	}
}




int pim() // функция вычисления кол-ва побед и занятого места
{
	int* pobed = (int*)malloc(i * sizeof(int));
	for (int q = 0; q < i; q++)
	{
		pobed[q] = 0;
		for (int x = 0; x < i; x++)
		{
			if (*(a + q * r + x) > *(b + q * r + x))
			{
				pobed[q] += 1;
			}
			mesto[q] = i - pobed[q];

		}
	}
}



int main()
{
	setlocale(LC_ALL, "RUS");

	FILE* file;

	int i = 0, r = 1; //переменная, считывающая количество игроков в списке

	file = fopen("tennis.txt", "r"); //открытие файла с списком игроков

	//чтение данных из файла
	//чтение строк/кол-ва игроков
	while (!feof(file)) 
	{
		if (fgetc(file) == '\n')
			r++;
	}

	char **name = (char**)calloc(4, sizeof(char*));// указатель на массив имён

	for (int q = 0; q < r; q++)
	{
		name[q] = (char*)calloc(70, sizeof(char)); //двумерный массив имён
		strcpy(name[q], "undefined"); //заполнение значениями
	}

	int *a = (int*)malloc(pow(r, 2) * sizeof(int));// указатель на массив значений
	int *b = (int*)malloc(pow(r, 2) * sizeof(int));// указатель на транспонированный массив значений

	//определение динамического массива данными из файла

	//чтение/заполнение значений
	while (fscanf(file, "%s", name[i]) != EOF) 
	{ //чтение имён
		for (int x = 0; x < r; x++) 
		{ 
			fscanf(file, "%u", &(*(a + i * r + x))); 
		} //чтение чисел
		i++;
	}

	// Транспонируем значения в массив
	for (int q = 0; q < r; q++) 
	{
		for (int j = 0; j < r; j++) 
		{
			*(b + j * r + q) = *(a + q * r + j);
		}
	}
	fclose(file); //закрытие файла

	int* sum_ochkov = (int*)malloc(i * sizeof(int));
	int* mesto = (int*)malloc(i * sizeof(int));

	tabl();
	ochki();
	pim();

	for (int i = 0; i < 4; i++) // освобождение памяти | массив имен
	{
		free(name[i]);
	}

	free(name);
	free(a); // | массив знач 1
	free(b); // | массив знач 2

	system("pause");
}
